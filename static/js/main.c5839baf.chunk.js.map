{"version":3,"sources":["assets/soundtrack.mp3","assets/gunshot.mp3","assets/zombie_death.mp3","App.js","index.js"],"names":["aspect","window","innerWidth","innerHeight","App","props","animationId","characterDirection","scene","THREE","camera","renderer","character","enemies","bullets","pressedKeys","soundtrack","Audio","startGame","setState","startModalVisible","position","set","lookAt","setSize","mount","appendChild","domElement","generateBaseShapes","animate","addEventListener","onKeyDownOrUp","playSoundTrack","volume","play","id","requestAnimationFrame","state","zombiesGenerated","zombiesKilled","handleNewLevel","forEach","bulletObj","shouldRemoveObject","bullet","filter","obj","remove","handleObjectMove","direction","enemy","distanceToCharacter","x","z","handleEnemyMove","handleCollisions","render","object","Math","abs","enemiesNumber","level","prevState","blinkLevelInfo","setTimeout","generateEnemies","isCharacterCollisionDetected","b","e","zombie_death","bulletsAmount","all","gameOver","cancelAnimationFrame","pause","currentTime","bestScore","localStorage","getItem","setItem","endModalVisible","generateCharacter","generatePlane","planeGeometry","planeMaterial","color","side","plane","rotation","PI","add","generateHumanoidShape","bodyColor","headColor","legsColor","armsColor","hairColor","bodyGeometry","bodyMaterial","headGeometry","headMaterial","legGeometry","legMaterial","armGeometry","armMaterial","hairGeometry","hairMaterial","shape","body","head","leg1","leg2","arm1","arm2","hair","human","Object","entries","value","amount","i","generateEnemy","randomPosition","getNumberOrOppositeRandomly","random","y","push","number","round","checkPossibilityToMove","handleObjectLeftMove","handleObjectRightMove","handleObjectUpMove","handleObjectDownMove","event","key","type","checkIfNewDirectionAndChange","shoot","reload","removeBulletFromRender","console","log","magazine","bulletGeometry","bulletMaterial","calculateBaseBulletPosition","gunshot_sound","characterPosition","calculateZombiesLevelKilledPercentage","levelInfoDiv","document","getElementById","style","display","group","geometry","children","b1","parameters","height","t1","r1","width","l1","f1","depth","B1","b2","t2","r2","l2","f2","B2","this","justify","percent","showInfo","strokeColor","visible","title","footer","onClick","maskClosable","closable","location","ref","Component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c5839baf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/soundtrack.14a6a92a.mp3\";","export default __webpack_public_path__ + \"static/media/gunshot.12621986.mp3\";","export default __webpack_public_path__ + \"static/media/zombie_death.7bad6105.mp3\";","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { Modal, Button, Row, Progress } from 'antd';\nimport soundtrack from './assets/soundtrack.mp3';\nimport gunshot_sound from './assets/gunshot.mp3';\nimport zombie_death from './assets/zombie_death.mp3';\nimport './App.css';\n\nconst aspect = window.innerWidth / window.innerHeight;\nconst MAX_IN_MAGAZINE = 8;\nconst d = 20;\n\nclass App extends Component {\n    animationId = null;\n    characterDirection = 'UP';\n    scene = new THREE.Scene();\n    camera = new THREE.OrthographicCamera(-d * aspect, d * aspect, d, -d, 1, 1000);\n    renderer = new THREE.WebGLRenderer();\n    character = null;\n    enemies = [];\n    bullets = [];\n    pressedKeys = {};\n    soundtrack = new Audio(soundtrack);\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            startModalVisible: true,\n            endModalVisible: false,\n            level: 1,\n            bulletsAmount: {\n                magazine: 8,\n                all: 24\n            },\n            zombiesGenerated: 0,\n            zombiesKilled: 0\n        }\n    }\n    \n    startGame = () => {\n        this.setState({ startModalVisible: false })\n        \n        this.camera.position.set(20, 20, 20);\n        this.camera.lookAt(this.scene.position);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.mount.appendChild(this.renderer.domElement);\n    \n        this.generateBaseShapes();\n        this.animate();\n\n        window.addEventListener('keydown', this.onKeyDownOrUp);\n        window.addEventListener('keyup', this.onKeyDownOrUp);\n    }\n\n    playSoundTrack = () => {\n        this.soundtrack.volume = 0.5;\n        this.soundtrack.play();\n    }\n\n    animate = () => {                        \n        this.id = requestAnimationFrame(this.animate);\n        if (this.state.zombiesGenerated === this.state.zombiesKilled) {\n            this.handleNewLevel();\n        }\n\n        this.bullets.forEach(bulletObj => {\n            if (this.shouldRemoveObject(bulletObj.bullet)) {\n                this.bullets = this.bullets.filter(obj => obj !== bulletObj);\n                return this.scene.remove(bulletObj.bullet);\n            }\n            this.handleObjectMove(bulletObj.bullet, bulletObj.direction, 0.2, false);\n        })\n\n        this.enemies.forEach(enemy => {\n            const distanceToCharacter = {\n                x: enemy.position.x - this.character.position.x,\n                z: enemy.position.z - this.character.position.z\n            };\n            this.handleEnemyMove(enemy, distanceToCharacter);\n        })\n               \n        this.handleCollisions();\n        this.renderer.render(this.scene, this.camera);\n    };\n\n    shouldRemoveObject = (object) => {\n        if (Math.abs(object.position.x) > 20)\n            return true;\n            \n        if (Math.abs(object.position.z) > 20)\n            return true;\n        \n        return false;\n    }\n\n    handleNewLevel = () => {\n        const enemiesNumber = this.state.level;\n            \n        this.setState(prevState => ({\n            zombiesGenerated: prevState.zombiesGenerated + enemiesNumber\n        }));\n        this.blinkLevelInfo();\n        setTimeout(() => this.generateEnemies(enemiesNumber), 3000);\n    }\n\n    handleEnemyMove = (enemy, distanceToCharacter) => {\n        if (distanceToCharacter.x < 0 && distanceToCharacter.z > 0) \n            return this.handleObjectMove(enemy, 'RIGHT', 0.01, false);\n        \n        if (distanceToCharacter.x > 0 && distanceToCharacter.z < 0) \n            return this.handleObjectMove(enemy, 'LEFT', 0.01, false);\n        \n        if (distanceToCharacter.x > 0 && distanceToCharacter.z > 0) \n            return this.handleObjectMove(enemy, 'UP', 0.01, false);\n        \n        if (distanceToCharacter.x < 0 && distanceToCharacter.z < 0) \n            return this.handleObjectMove(enemy, 'DOWN', 0.01, false);\n    }\n\n    handleCollisions = () => {\n        this.enemies.forEach(enemy => {\n            this.bullets.forEach(bulletObj => {\n                if (this.isCharacterCollisionDetected(enemy, bulletObj.bullet)) {\n                    this.scene.remove(bulletObj.bullet);\n                    this.scene.remove(enemy);\n                    this.bullets = this.bullets.filter(b => b !== bulletObj);\n                    this.enemies = this.enemies.filter(e => e !== enemy);\n                    const death = new Audio(zombie_death);\n                    death.play();\n                    \n                    this.setState(prevState => ({\n                        bulletsAmount: {\n                            ...prevState.bulletsAmount,\n                            all: prevState.bulletsAmount.all + 3\n                        },\n                        zombiesKilled: prevState.zombiesKilled + 1,\n                        level: prevState.zombiesGenerated === prevState.zombiesKilled + 1 ? prevState.level + 1 : prevState.level\n                    }));\n                }\n            })\n\n            if (this.isCharacterCollisionDetected(enemy, this.character)) {\n                this.gameOver();\n            }\n        });\n    }\n\n    gameOver = () => {\n        cancelAnimationFrame(this.id);\n        this.scene.remove(this.character);\n        this.soundtrack.pause();\n        this.soundtrack.currentTime = 0;\n\n        const bestScore = localStorage.getItem('bestScore');\n        \n        if (!bestScore || this.state.zombiesKilled > bestScore) {\n            localStorage.setItem('bestScore', this.state.zombiesKilled);\n        }\n        \n        this.setState({ endModalVisible: true });\n    }\n\n    \n    isCharacterCollisionDetected(group, object) {\n        const obj = object.geometry ? object : object.children[0];\n        \n        let b1 = object.position.y - obj.geometry.parameters.height / 2;\n        let t1 = object.position.y + obj.geometry.parameters.height / 2;\n        let r1 = object.position.x + obj.geometry.parameters.width / 2;\n        let l1 = object.position.x - obj.geometry.parameters.width / 2;\n        let f1 = object.position.z - obj.geometry.parameters.depth / 2;\n        let B1 = object.position.z + obj.geometry.parameters.depth / 2;\n        let b2 = group.position.y - group.children[0].geometry.parameters.height / 2;\n        let t2 = group.position.y + group.children[0].geometry.parameters.height / 2;\n        let r2 = group.position.x + group.children[0].geometry.parameters.width / 2;\n        let l2 = group.position.x - group.children[0].geometry.parameters.width / 2;\n        let f2 = group.position.z - group.children[0].geometry.parameters.depth / 2;\n        let B2 = group.position.z + group.children[0].geometry.parameters.depth / 2;\n        if (t1 < b2 || r1 < l2 || b1 > t2 || l1 > r2 || f1 > B2 || B1 < f2) {\n            return false;\n        }\n        return true;\n    }\n\n    generateBaseShapes = () => {\n        this.generateCharacter();\n        this.generatePlane();\n    }\n    \n    generatePlane = () => {\n        const planeGeometry = new THREE.PlaneGeometry(40, 40);\n        const planeMaterial = new THREE.MeshBasicMaterial({ color: 0x808080, side: THREE.DoubleSide });\n        const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n        \n        plane.rotation.set(Math.PI / 2, 0, 0);\n        this.scene.add(plane);\n    }\n\n    generateHumanoidShape = (bodyColor, headColor, legsColor, armsColor, hairColor) => {\n        const bodyGeometry = new THREE.BoxGeometry(1.3, 4, 2);\n        const bodyMaterial = new THREE.MeshBasicMaterial({ color: bodyColor });\n        const headGeometry = new THREE.BoxGeometry(1.3, 1.5, 2);\n        const headMaterial = new THREE.MeshBasicMaterial({ color: headColor });\n        const legGeometry = new THREE.BoxGeometry(1.3, 2, 0.8);\n        const legMaterial = new THREE.MeshBasicMaterial({ color: legsColor });\n        const armGeometry = new THREE.BoxGeometry(1.3, 1.2, 0.8);\n        const armMaterial = new THREE.MeshBasicMaterial({ color: armsColor });\n        const hairGeometry = new THREE.BoxGeometry(1.3, 0.2, 2);\n        const hairMaterial = new THREE.MeshBasicMaterial({ color: hairColor });              \n        \n        const shape = {\n            body: new THREE.Mesh(bodyGeometry, bodyMaterial),  \n            head: new THREE.Mesh(headGeometry, headMaterial), \n            leg1: new THREE.Mesh(legGeometry, legMaterial),  \n            leg2: new THREE.Mesh(legGeometry, legMaterial),  \n            arm1: new THREE.Mesh(armGeometry, armMaterial),  \n            arm2: new THREE.Mesh(armGeometry, armMaterial),  \n            hair: new THREE.Mesh(hairGeometry, hairMaterial)\n        }\n\n        shape.body.position.set(0, 4, 0);\n        shape.head.position.set(0, 7, 0);\n        shape.hair.position.set(0, 8, 0);\n        shape.leg1.position.set(0, 1, -0.6);\n        shape.leg2.position.set(0, 1, 0.6);\n        shape.arm1.position.set(0, 4.6, 1.5);\n        shape.arm2.position.set(0, 4.6, -1.5);\n        \n        const human = new THREE.Group();\n        for (const [_, value] of Object.entries(shape)) {\n            human.add(value);\n        }\n\n        return human;\n    }\n\n    generateCharacter = () => {\n        const character = this.generateHumanoidShape(0xffffff, 0xecc09b, 0x000000, 0xecc09b, 0x000000);\n                  \n        this.character = character;\n        this.scene.add(character);\n    }\n\n    generateEnemies = (amount) => {        \n        for (let i=0; i<amount; ++i) {\n            this.generateEnemy();\n        }\n    }\n\n    generateEnemy = () => {\n        const randomPosition = {\n            x: this.getNumberOrOppositeRandomly(Math.random() * 10 + 10),\n            y: 2,\n            z: this.getNumberOrOppositeRandomly(Math.random() * 10 + 10),\n        };\n        \n        const enemy = this.generateHumanoidShape(0xff0000, 0xff0000, 0x000000, 0xff0000, 0x000000);\n        enemy.position.set(randomPosition.x, randomPosition.y, randomPosition.z);\n        this.enemies.push(enemy);\n        this.scene.add(enemy);\n    }\n\n    getNumberOrOppositeRandomly = (number) => {\n        if (Math.round(Math.random()) === 0) {\n            return number;\n        }\n        \n        return -number;\n    }\n\n    handleObjectMove = (object, direction, value, checkPossibilityToMove = true) => {\n\n        if (direction === 'LEFT')\n            return this.handleObjectLeftMove(object, value, checkPossibilityToMove);\n\n        if (direction === 'RIGHT')\n            return this.handleObjectRightMove(object, value, checkPossibilityToMove);\n\n        if (direction === 'UP')\n            return this.handleObjectUpMove(object, value, checkPossibilityToMove);\n\n        if (direction === 'DOWN')\n            return this.handleObjectDownMove(object, value, checkPossibilityToMove);\n    }\n\n    onKeyDownOrUp = (event) => {\n        this.pressedKeys[event.key] = event.type === 'keydown';\n        this.playSoundTrack();\n\n        if (this.pressedKeys['ArrowLeft'] && this.pressedKeys['ArrowDown']) {\n            this.handleObjectMove(this.character, 'LEFT', 0.2);\n            this.handleObjectMove(this.character, 'DOWN', 0.2);\n            return;\n        }\n\n        if (this.pressedKeys['ArrowLeft'] && this.pressedKeys['ArrowUp']) {\n            this.handleObjectMove(this.character, 'LEFT', 0.2);\n            this.handleObjectMove(this.character, 'UP', 0.2);\n            return;\n        }\n\n        if (this.pressedKeys['ArrowRight'] && this.pressedKeys['ArrowUp']) {\n            this.handleObjectMove(this.character, 'RIGHT', 0.2);\n            this.handleObjectMove(this.character, 'UP', 0.2);\n            return;\n        }\n\n        if (this.pressedKeys['ArrowRight'] && this.pressedKeys['ArrowDown']) {\n            this.handleObjectMove(this.character, 'RIGHT', 0.2);\n            this.handleObjectMove(this.character, 'DOWN', 0.2);\n            return;\n        }\n\n        if (this.pressedKeys['ArrowLeft']) {\n            const isNewDirection = this.checkIfNewDirectionAndChange('LEFT');\n            if (isNewDirection)\n                return;\n\n            this.handleObjectMove(this.character, 'LEFT', 0.2);\n        }\n        if (this.pressedKeys['ArrowRight']) {\n            const isNewDirection = this.checkIfNewDirectionAndChange('RIGHT');\n            if (isNewDirection)\n                return;\n\n            this.handleObjectMove(this.character, 'RIGHT', 0.2)\n        }\n        if (this.pressedKeys['ArrowUp']) {\n            const isNewDirection = this.checkIfNewDirectionAndChange('UP');\n            if (isNewDirection)\n                return;\n\n            this.handleObjectMove(this.character, 'UP', 0.2);\n        }\n        if (this.pressedKeys['ArrowDown']) {\n            const isNewDirection = this.checkIfNewDirectionAndChange('DOWN');\n            if (isNewDirection)\n                return;\n\n            this.handleObjectMove(this.character, 'DOWN', 0.2);\n        }\n\n        if (this.pressedKeys[' ']) {\n            this.shoot();\n        }\n\n        if (this.pressedKeys['r']) {\n            this.reload();\n        }\n    }\n\n    checkIfNewDirectionAndChange = (direction) => {\n        if (this.characterDirection !== direction) {\n            this.characterDirection = direction;\n            if (direction === 'LEFT') {\n                this.character.rotation.y = Math.PI / 4;\n            }\n            if (direction === 'UP') {\n                this.character.rotation.y = 3 * Math.PI / 4;\n            }\n            if (direction === 'RIGHT') {\n                this.character.rotation.y = 5 * Math.PI / 4;\n            }\n            if (direction === 'DOWN') {\n                this.character.rotation.y = 7 * Math.PI / 4;\n            }\n            \n            return true;\n        }\n        return false;\n    }\n\n    handleObjectLeftMove = (object, value, checkPossibilityToMove = false, isBullet = false) => {\n        if (checkPossibilityToMove) {\n            if (object.position.x - value <= -20)\n                return ;\n            if (object.position.z + value >= 20)\n                return ;\n        }\n        \n        object.position.x -= value;\n        object.position.z += value;\n    }\n\n    handleObjectRightMove = (object, value, checkPossibilityToMove = false, isBullet = false) => {\n        if (checkPossibilityToMove) {\n            if (object.position.x + value >= 20)\n                return ;\n            if (object.position.z - value <= -20)\n                return ;\n        }\n        \n        object.position.x += value;\n        object.position.z -= value;\n    }\n\n    removeBulletFromRender = (bulletObj) => {\n        console.log(bulletObj);\n    }\n\n    handleObjectUpMove = (object, value, checkPossibilityToMove = false, isBullet = false) => {\n        if (checkPossibilityToMove) {\n            if (object.position.x - value <= -20)\n                return ;\n            if (object.position.z - value <= -20)\n                return ;\n        }\n        \n        object.position.x -= value;\n        object.position.z -= value;\n    }\n\n    handleObjectDownMove = (object, value, checkPossibilityToMove = false) => {\n        if (checkPossibilityToMove) {\n            if (object.position.x + value >= 20)\n                return ;\n            if (object.position.z + value >= 20)\n                return ;\n        }\n        \n        object.position.x += value;\n        object.position.z += value;\n    }\n\n    shoot = () => {\n        if (this.state.bulletsAmount.magazine <= 0)\n            return ;\n        \n        this.setState(prevState => ({\n            bulletsAmount: {\n                ...prevState.bulletsAmount,\n                magazine: prevState.bulletsAmount.magazine - 1,\n            },\n        }));\n        \n        const bulletGeometry = new THREE.BoxGeometry(0.4, 0.4, 0.4);\n        const bulletMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        const bullet = new THREE.Mesh(bulletGeometry, bulletMaterial);\n\n        const position = this.calculateBaseBulletPosition();\n        \n        bullet.position.set(position.x, position.y, position.z);\n        const bulletObj = { bullet: bullet, direction: this.characterDirection };\n        this.scene.add(bullet);\n        this.bullets.push(bulletObj);\n        \n        const gunshot = new Audio(gunshot_sound);\n        gunshot.play();\n    }\n\n    calculateBaseBulletPosition = () => {\n        const characterPosition = this.character.position;\n        \n        if (this.characterDirection === 'UP' || this.characterDirection === 'DOWN') {\n            const position = {\n                x: this.characterDirection === 'UP' ? characterPosition.x + 2.2 : characterPosition.x,\n                y: characterPosition.y + 3,\n                z: this.characterDirection === 'DOWN' ? characterPosition.z + 2.2 : characterPosition.z\n            };\n\n            return position;\n        }\n\n        const position = {\n            x: characterPosition.x,\n            y: characterPosition.y + 3,\n            z: characterPosition.z\n        };\n        return position;\n        \n    }\n\n    reload = () => {        \n        if (this.state.bulletsAmount.magazine >= MAX_IN_MAGAZINE)\n            return ;\n        \n        if (this.state.bulletsAmount.all <= 0)\n            return ;\n\n        this.setState(prevState => ({\n            bulletsAmount: {\n                magazine: prevState.bulletsAmount.all < MAX_IN_MAGAZINE ? prevState.bulletsAmount.all : MAX_IN_MAGAZINE,\n                all: prevState.bulletsAmount.all - MAX_IN_MAGAZINE > 0 ? prevState.bulletsAmount.all - MAX_IN_MAGAZINE : 0\n            },\n        }))\n    }\n\n    calculateZombiesLevelKilledPercentage = () => {\n        const { zombiesGenerated, zombiesKilled, level } = this.state;\n        const toKill = zombiesGenerated - zombiesKilled;\n        const generatedInLevel = level;\n        const killedInLevel = generatedInLevel - toKill;\n        return killedInLevel / generatedInLevel * 100;\n    }\n\n    render() {\n        const { startModalVisible, endModalVisible } = this.state;\n        \n        return (\n            <div>\n                {!startModalVisible && !endModalVisible &&\n                    <>\n                        <div id='bullets-info'>\n                            Bullets amount: {this.state.bulletsAmount.magazine}  /  {this.state.bulletsAmount.all}\n                        </div>\n                        <div id='zombies-info'>\n                            Zombies killed: {this.state.zombiesKilled}\n                        </div>\n                        <div id='level-info'>\n                            <Row justify='center'>\n                                Level: {this.state.level}\n                            </Row>\n                            <Row>\n                                <Progress \n                                    percent={this.calculateZombiesLevelKilledPercentage()} \n                                    showInfo={false} \n                                    strokeColor='red'\n                                />\n                            </Row>\n                        </div>\n                    </>\n                }\n                <Modal \n                    visible={this.state.startModalVisible}  \n                    title='Welcome to Shootlab game!'\n                    footer={<Button onClick={this.startGame}>Start a game</Button>}\n                    maskClosable={false}\n                    closable={false}\n                >\n                    <Row>Moving: ↑←↓→</Row>\n                    <Row>Shoot: space</Row>\n                    <Row>Reload: R</Row>\n                </Modal>\n                <Modal \n                    visible={this.state.endModalVisible}  \n                    title='Game over!'\n                    footer={<Button onClick={() => window.location.reload()}>Play one more time</Button>}\n                    maskClosable={false}\n                    closable={false}\n                >\n                    <Row>Your score: {this.state.zombiesKilled}</Row>\n                    <Row>Level: {this.state.level}</Row>\n                    <Row>Your best score: {localStorage.getItem('bestScore')}</Row>\n                </Modal>\n                <div ref={ref => (this.mount = ref)} />\n            </div>\n        )\n    }\n\n    blinkLevelInfo = () => {\n        var levelInfoDiv = document.getElementById('level-info');\n        setTimeout(() => {\n            if (levelInfoDiv) {\n                levelInfoDiv.style.display = (levelInfoDiv.style.display === 'none' ? '' : 'none');\n            }\n        }, 500);\n        setTimeout(() => {\n            if (levelInfoDiv) {\n                levelInfoDiv.style.display = (levelInfoDiv.style.display === 'none' ? '' : 'none');\n            }\n        }, 1000);\n     }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}